{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"F:\\\\Desktop\\\\book-review-platform\\\\frontend\\\\src\\\\pages\\\\NewReviewPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport \"./NewReviewPage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.NODE_ENV === \"production\" ? \"/api\" : \"http://localhost:5000/api\";\nfunction NewReviewPage() {\n  _s();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const [books, setBooks] = useState([]);\n  const [selectedBook, setSelectedBook] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [formData, setFormData] = useState({\n    book_id: searchParams.get(\"bookId\") || \"\",\n    rating: 0,\n    title: \"\",\n    content: \"\"\n  });\n  useEffect(() => {\n    const fetchBooks = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(`${API_BASE_URL}/books`);\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({}));\n          throw new Error(errorData.message || `Failed to fetch books: ${response.status}`);\n        }\n        const data = await response.json();\n        if (!data.data || !Array.isArray(data.data)) {\n          throw new Error('Invalid response format from server');\n        }\n        setBooks(data.data);\n\n        // If bookId is provided in URL, find and set the selected book\n        if (formData.book_id) {\n          const book = data.data.find(b => b._id === formData.book_id);\n          if (book) setSelectedBook(book);\n        }\n      } catch (error) {\n        console.error('Error fetching books:', error);\n        setError(error.message || 'Failed to load books. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBooks();\n  }, [formData.book_id]);\n  const handleBookSelect = e => {\n    const bookId = e.target.value;\n    const book = books.find(b => b._id === bookId);\n    setSelectedBook(book || null);\n    setFormData({\n      ...formData,\n      book_id: bookId\n    });\n  };\n  const handleRatingClick = rating => {\n    setFormData({\n      ...formData,\n      rating\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.book_id || !formData.rating || !formData.title.trim() || !formData.content.trim()) {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n    setSubmitting(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/reviews`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          book: formData.book_id,\n          rating: formData.rating,\n          title: formData.title.trim(),\n          content: formData.content.trim(),\n          user: \"65f1a2b3c4d5e6f7g8h9i0j1\",\n          // Temporary user ID - replace with actual user ID from auth\n          user_name: \"Current User\" // Temporary user name - replace with actual user name from auth\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || `Failed to submit review: ${response.status}`);\n      }\n\n      // Redirect to the book page\n      navigate(`/books/${formData.book_id}`);\n    } catch (error) {\n      console.error('Error submitting review:', error);\n      setError(error.message || \"Failed to submit review. Please try again.\");\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const renderStars = () => {\n    return Array.from({\n      length: 5\n    }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => handleRatingClick(i + 1),\n      className: `star-button ${i < formData.rating ? \"filled\" : \"\"}`,\n      \"aria-label\": `${i + 1} stars`,\n      children: \"\\u2B50\"\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        size: \"lg\",\n        text: \"Loading books...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-review-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"review-form-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate(-1),\n              className: \"back-button\",\n              \"aria-label\": \"Go back\",\n              children: \"\\u2190 Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Write a Review\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-content\",\n            children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-container\",\n              children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                message: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              className: \"review-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"book\",\n                  children: \"Select Book\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"book\",\n                  value: formData.book_id,\n                  onChange: handleBookSelect,\n                  className: \"form-select\",\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Choose a book to review\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 21\n                  }, this), books.map(book => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: book._id,\n                    children: [book.title, \" by \", book.author]\n                  }, book._id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), selectedBook && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-book\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: selectedBook.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"book-author\",\n                  children: [\"by \", selectedBook.author]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"book-genre\",\n                  children: selectedBook.genre\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"rating-input\",\n                  children: [renderStars(), formData.rating > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-text\",\n                    children: [formData.rating, \" out of 5 stars\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"title\",\n                  children: \"Review Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"title\",\n                  type: \"text\",\n                  placeholder: \"Give your review a title\",\n                  value: formData.title,\n                  onChange: e => setFormData({\n                    ...formData,\n                    title: e.target.value\n                  }),\n                  className: \"form-input\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"content\",\n                  children: \"Review\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"content\",\n                  placeholder: \"Share your thoughts about this book...\",\n                  rows: 6,\n                  value: formData.content,\n                  onChange: e => setFormData({\n                    ...formData,\n                    content: e.target.value\n                  }),\n                  className: \"form-textarea\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-actions\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  disabled: submitting,\n                  className: \"btn btn-primary\",\n                  children: submitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {\n                      size: \"sm\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Submitting...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true) : \"Submit Review\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(NewReviewPage, \"XRHRqoqqehuTWK1iCnap3faOgNY=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n_c = NewReviewPage;\nexport default NewReviewPage;\nvar _c;\n$RefreshReg$(_c, \"NewReviewPage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useState","useNavigate","useSearchParams","LoadingSpinner","ErrorMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","NODE_ENV","NewReviewPage","navigate","searchParams","books","setBooks","selectedBook","setSelectedBook","loading","setLoading","submitting","setSubmitting","error","setError","formData","setFormData","book_id","get","rating","title","content","fetchBooks","response","fetch","ok","errorData","json","catch","Error","message","status","data","Array","isArray","book","find","b","_id","console","handleBookSelect","e","bookId","target","value","handleRatingClick","handleSubmit","preventDefault","trim","method","headers","body","JSON","stringify","user","user_name","renderStars","from","length","_","i","type","onClick","className","children","fileName","lineNumber","columnNumber","size","text","onSubmit","htmlFor","id","onChange","required","map","author","genre","placeholder","rows","disabled","_c","$RefreshReg$"],"sources":["F:/Desktop/book-review-platform/frontend/src/pages/NewReviewPage.js"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { useNavigate, useSearchParams } from \"react-router-dom\"\nimport LoadingSpinner from \"../components/LoadingSpinner\"\nimport ErrorMessage from \"../components/ErrorMessage\"\nimport \"./NewReviewPage.css\"\n\nconst API_BASE_URL = process.env.NODE_ENV === \"production\" ? \"/api\" : \"http://localhost:5000/api\"\n\nfunction NewReviewPage() {\n  const navigate = useNavigate()\n  const [searchParams] = useSearchParams()\n\n  const [books, setBooks] = useState([])\n  const [selectedBook, setSelectedBook] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [submitting, setSubmitting] = useState(false)\n  const [error, setError] = useState(null)\n\n  const [formData, setFormData] = useState({\n    book_id: searchParams.get(\"bookId\") || \"\",\n    rating: 0,\n    title: \"\",\n    content: \"\",\n  })\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      setLoading(true)\n      setError(null)\n      try {\n        const response = await fetch(`${API_BASE_URL}/books`)\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({}))\n          throw new Error(errorData.message || `Failed to fetch books: ${response.status}`)\n        }\n        const data = await response.json()\n        if (!data.data || !Array.isArray(data.data)) {\n          throw new Error('Invalid response format from server')\n        }\n        setBooks(data.data)\n\n        // If bookId is provided in URL, find and set the selected book\n        if (formData.book_id) {\n          const book = data.data.find((b) => b._id === formData.book_id)\n          if (book) setSelectedBook(book)\n        }\n      } catch (error) {\n        console.error('Error fetching books:', error)\n        setError(error.message || 'Failed to load books. Please try again later.')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchBooks()\n  }, [formData.book_id])\n\n  const handleBookSelect = (e) => {\n    const bookId = e.target.value\n    const book = books.find((b) => b._id === bookId)\n    setSelectedBook(book || null)\n    setFormData({ ...formData, book_id: bookId })\n  }\n\n  const handleRatingClick = (rating) => {\n    setFormData({ ...formData, rating })\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (!formData.book_id || !formData.rating || !formData.title.trim() || !formData.content.trim()) {\n      setError(\"Please fill in all fields\")\n      return\n    }\n\n    setSubmitting(true)\n    setError(null)\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/reviews`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          book: formData.book_id,\n          rating: formData.rating,\n          title: formData.title.trim(),\n          content: formData.content.trim(),\n          user: \"65f1a2b3c4d5e6f7g8h9i0j1\", // Temporary user ID - replace with actual user ID from auth\n          user_name: \"Current User\", // Temporary user name - replace with actual user name from auth\n        }),\n      })\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}))\n        throw new Error(errorData.message || `Failed to submit review: ${response.status}`)\n      }\n\n      // Redirect to the book page\n      navigate(`/books/${formData.book_id}`)\n    } catch (error) {\n      console.error('Error submitting review:', error)\n      setError(error.message || \"Failed to submit review. Please try again.\")\n    } finally {\n      setSubmitting(false)\n    }\n  }\n\n  const renderStars = () => {\n    return Array.from({ length: 5 }, (_, i) => (\n      <button\n        key={i}\n        type=\"button\"\n        onClick={() => handleRatingClick(i + 1)}\n        className={`star-button ${i < formData.rating ? \"filled\" : \"\"}`}\n        aria-label={`${i + 1} stars`}\n      >\n        ⭐\n      </button>\n    ))\n  }\n\n  if (loading) {\n    return (\n      <div className=\"page-container\">\n        <LoadingSpinner size=\"lg\" text=\"Loading books...\" />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"new-review-page\">\n      <div className=\"container\">\n        <div className=\"review-form-container\">\n          <div className=\"review-form-card\">\n            <div className=\"form-header\">\n              <button \n                onClick={() => navigate(-1)} \n                className=\"back-button\"\n                aria-label=\"Go back\"\n              >\n                ← Back\n              </button>\n              <h1>Write a Review</h1>\n            </div>\n            <div className=\"form-content\">\n              {error && (\n                <div className=\"error-container\">\n                  <ErrorMessage message={error} />\n                </div>\n              )}\n\n              <form onSubmit={handleSubmit} className=\"review-form\">\n                {/* Book Selection */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"book\">Select Book</label>\n                  <select\n                    id=\"book\"\n                    value={formData.book_id}\n                    onChange={handleBookSelect}\n                    className=\"form-select\"\n                    required\n                  >\n                    <option value=\"\">Choose a book to review</option>\n                    {books.map((book) => (\n                      <option key={book._id} value={book._id}>\n                        {book.title} by {book.author}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                {/* Selected Book Info */}\n                {selectedBook && (\n                  <div className=\"selected-book\">\n                    <h3>{selectedBook.title}</h3>\n                    <p className=\"book-author\">by {selectedBook.author}</p>\n                    <p className=\"book-genre\">{selectedBook.genre}</p>\n                  </div>\n                )}\n\n                {/* Rating */}\n                <div className=\"form-group\">\n                  <label>Rating</label>\n                  <div className=\"rating-input\">\n                    {renderStars()}\n                    {formData.rating > 0 && <span className=\"rating-text\">{formData.rating} out of 5 stars</span>}\n                  </div>\n                </div>\n\n                {/* Review Title */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"title\">Review Title</label>\n                  <input\n                    id=\"title\"\n                    type=\"text\"\n                    placeholder=\"Give your review a title\"\n                    value={formData.title}\n                    onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n                    className=\"form-input\"\n                    required\n                  />\n                </div>\n\n                {/* Review Content */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"content\">Review</label>\n                  <textarea\n                    id=\"content\"\n                    placeholder=\"Share your thoughts about this book...\"\n                    rows={6}\n                    value={formData.content}\n                    onChange={(e) => setFormData({ ...formData, content: e.target.value })}\n                    className=\"form-textarea\"\n                    required\n                  />\n                </div>\n\n                {/* Submit Button */}\n                <div className=\"form-actions\">\n                  <button type=\"submit\" disabled={submitting} className=\"btn btn-primary\">\n                    {submitting ? (\n                      <>\n                        <LoadingSpinner size=\"sm\" />\n                        <span>Submitting...</span>\n                      </>\n                    ) : (\n                      \"Submit Review\"\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NewReviewPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}