{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"F:\\\\Desktop\\\\book-review-platform\\\\frontend\\\\src\\\\contexts\\\\AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nconst initialState = {\n  books: [],\n  reviews: [],\n  currentUser: null,\n  loading: false,\n  error: null,\n  searchQuery: \"\",\n  selectedGenre: \"All Genres\"\n};\nfunction appReducer(state, action) {\n  switch (action.type) {\n    case \"SET_BOOKS\":\n      return {\n        ...state,\n        books: action.payload\n      };\n    case \"SET_REVIEWS\":\n      return {\n        ...state,\n        reviews: action.payload\n      };\n    case \"SET_CURRENT_USER\":\n      return {\n        ...state,\n        currentUser: action.payload\n      };\n    case \"SET_LOADING\":\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case \"SET_ERROR\":\n      return {\n        ...state,\n        error: action.payload\n      };\n    case \"SET_SEARCH_QUERY\":\n      return {\n        ...state,\n        searchQuery: action.payload\n      };\n    case \"SET_SELECTED_GENRE\":\n      return {\n        ...state,\n        selectedGenre: action.payload\n      };\n    case \"ADD_REVIEW\":\n      return {\n        ...state,\n        reviews: [...state.reviews, action.payload]\n      };\n    default:\n      return state;\n  }\n}\nexport function AppProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n}\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AppProvider;\nexport function useApp() {\n  _s2();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error(\"useApp must be used within an AppProvider\");\n  }\n  return context;\n}\n_s2(useApp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useReducer","jsxDEV","_jsxDEV","AppContext","initialState","books","reviews","currentUser","loading","error","searchQuery","selectedGenre","appReducer","state","action","type","payload","AppProvider","children","dispatch","Provider","value","fileName","lineNumber","columnNumber","_c","useApp","context","Error","$RefreshReg$"],"sources":["F:/Desktop/book-review-platform/frontend/src/contexts/AppContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useReducer } from \"react\"\n\nconst AppContext = createContext()\n\nconst initialState = {\n  books: [],\n  reviews: [],\n  currentUser: null,\n  loading: false,\n  error: null,\n  searchQuery: \"\",\n  selectedGenre: \"All Genres\",\n}\n\nfunction appReducer(state, action) {\n  switch (action.type) {\n    case \"SET_BOOKS\":\n      return { ...state, books: action.payload }\n    case \"SET_REVIEWS\":\n      return { ...state, reviews: action.payload }\n    case \"SET_CURRENT_USER\":\n      return { ...state, currentUser: action.payload }\n    case \"SET_LOADING\":\n      return { ...state, loading: action.payload }\n    case \"SET_ERROR\":\n      return { ...state, error: action.payload }\n    case \"SET_SEARCH_QUERY\":\n      return { ...state, searchQuery: action.payload }\n    case \"SET_SELECTED_GENRE\":\n      return { ...state, selectedGenre: action.payload }\n    case \"ADD_REVIEW\":\n      return { ...state, reviews: [...state.reviews, action.payload] }\n    default:\n      return state\n  }\n}\n\nexport function AppProvider({ children }) {\n  const [state, dispatch] = useReducer(appReducer, initialState)\n\n  return <AppContext.Provider value={{ state, dispatch }}>{children}</AppContext.Provider>\n}\n\nexport function useApp() {\n  const context = useContext(AppContext)\n  if (!context) {\n    throw new Error(\"useApp must be used within an AppProvider\")\n  }\n  return context\n}\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;EAAAC,GAAA,GAAAD,YAAA;AAEZ,SAASE,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,UAAU,gBAAGL,aAAa,CAAC,CAAC;AAElC,MAAMM,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,EAAE;EACXC,WAAW,EAAE,IAAI;EACjBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,IAAI;EACXC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE;AACjB,CAAC;AAED,SAASC,UAAUA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAO;QAAE,GAAGF,KAAK;QAAER,KAAK,EAAES,MAAM,CAACE;MAAQ,CAAC;IAC5C,KAAK,aAAa;MAChB,OAAO;QAAE,GAAGH,KAAK;QAAEP,OAAO,EAAEQ,MAAM,CAACE;MAAQ,CAAC;IAC9C,KAAK,kBAAkB;MACrB,OAAO;QAAE,GAAGH,KAAK;QAAEN,WAAW,EAAEO,MAAM,CAACE;MAAQ,CAAC;IAClD,KAAK,aAAa;MAChB,OAAO;QAAE,GAAGH,KAAK;QAAEL,OAAO,EAAEM,MAAM,CAACE;MAAQ,CAAC;IAC9C,KAAK,WAAW;MACd,OAAO;QAAE,GAAGH,KAAK;QAAEJ,KAAK,EAAEK,MAAM,CAACE;MAAQ,CAAC;IAC5C,KAAK,kBAAkB;MACrB,OAAO;QAAE,GAAGH,KAAK;QAAEH,WAAW,EAAEI,MAAM,CAACE;MAAQ,CAAC;IAClD,KAAK,oBAAoB;MACvB,OAAO;QAAE,GAAGH,KAAK;QAAEF,aAAa,EAAEG,MAAM,CAACE;MAAQ,CAAC;IACpD,KAAK,YAAY;MACf,OAAO;QAAE,GAAGH,KAAK;QAAEP,OAAO,EAAE,CAAC,GAAGO,KAAK,CAACP,OAAO,EAAEQ,MAAM,CAACE,OAAO;MAAE,CAAC;IAClE;MACE,OAAOH,KAAK;EAChB;AACF;AAEA,OAAO,SAASI,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAvB,EAAA;EACxC,MAAM,CAACkB,KAAK,EAAEM,QAAQ,CAAC,GAAGnB,UAAU,CAACY,UAAU,EAAER,YAAY,CAAC;EAE9D,oBAAOF,OAAA,CAACC,UAAU,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAER,KAAK;MAAEM;IAAS,CAAE;IAAAD,QAAA,EAAEA;EAAQ;IAAAI,QAAA,EAAA5B,YAAA;IAAA6B,UAAA;IAAAC,YAAA;EAAA,OAAsB,CAAC;AAC1F;AAAC7B,EAAA,CAJesB,WAAW;AAAAQ,EAAA,GAAXR,WAAW;AAM3B,OAAO,SAASS,MAAMA,CAAA,EAAG;EAAA7B,GAAA;EACvB,MAAM8B,OAAO,GAAG5B,UAAU,CAACI,UAAU,CAAC;EACtC,IAAI,CAACwB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;EAC9D;EACA,OAAOD,OAAO;AAChB;AAAC9B,GAAA,CANe6B,MAAM;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}